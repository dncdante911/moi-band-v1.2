/**
 * –§–∞–π–ª: assets/js/epic-player-mobile-fix.js
 * –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–õ–ï–ï–†–ê –î–õ–Ø –ú–û–ë–ò–õ–ï–ô
 * –î–æ–±–∞–≤–∏—Ç—å –ü–ï–†–ï–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º epic-player.js
 * 
 * –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ HTML:
 * <script src="/assets/js/epic-player-mobile-fix.js"></script>
 * <script src="/assets/js/epic-player.js"></script>
 */

// ============================================
// –î–ï–¢–ï–ö–¢–û–† –ú–û–ë–ò–õ–¨–ù–û–ì–û –£–°–¢–†–û–ô–°–¢–í–ê
// ============================================

const isMobileDevice = () => {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
        navigator.userAgent
    );
};

const isTablet = () => {
    return /iPad|Android/i.test(navigator.userAgent) && 
           window.matchMedia("(min-width: 600px)").matches;
};

const isMobile = isMobileDevice() && !isTablet();

console.log('üì± Device Type:', {
    isMobile: isMobile,
    isTablet: isTablet(),
    userAgent: navigator.userAgent.slice(0, 50)
});

// ============================================
// –•–ï–õ–ü–ï–†: –ë–ï–ó–û–ü–ê–°–ù–´–ô querySelector
// ============================================

const safeQuery = (selector, context = document) => {
    try {
        return context.querySelector(selector);
    } catch (e) {
        console.warn('‚ö†Ô∏è Query selector failed:', selector);
        return null;
    }
};

const safeQueryAll = (selector, context = document) => {
    try {
        return context.querySelectorAll(selector);
    } catch (e) {
        console.warn('‚ö†Ô∏è Query selector all failed:', selector);
        return [];
    }
};

// ============================================
// –ü–û–õ–ò–§–ò–õ–õ: –î–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
// ============================================

if (!String.prototype.padStart) {
    String.prototype.padStart = function(targetLength, padString) {
        targetLength = Math.floor(targetLength) || 0;
        if (targetLength <= this.length) return String(this);
        
        padString = String(typeof padString !== 'undefined' ? padString : ' ');
        if (padString.length === 0) return String(this);
        
        const padLen = targetLength - this.length;
        const repeats = Math.ceil(padLen / padString.length);
        return padString.repeat(repeats).slice(0, padLen) + String(this);
    };
}

// ============================================
// –†–ê–°–®–ò–†–ï–ù–ò–ï: EpicPlayerMobileHelper
// ============================================

class EpicPlayerMobileHelper {
    constructor() {
        this.viewport = this.detectViewport();
        this.init();
    }
    
    /**
     * –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
     */
    detectViewport() {
        const width = window.innerWidth;
        
        if (width < 480) return 'xs'; // Extra Small
        if (width < 768) return 'sm'; // Small
        if (width < 1024) return 'md'; // Medium
        if (width < 1440) return 'lg'; // Large
        return 'xl'; // Extra Large
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
     */
    init() {
        console.log('üé∏ Mobile Helper initialized:', this.viewport);
        
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
        window.addEventListener('resize', () => this.onWindowResize());
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–ª–µ–µ—Ä –≥–æ—Ç–æ–≤
        document.addEventListener('DOMContentLoaded', () => this.ensurePlayerReady());
        
        // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª–µ–π
        if (isMobile) {
            this.optimizeForMobile();
        }
    }
    
    /**
     * –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
     */
    onWindowResize() {
        const newViewport = this.detectViewport();
        if (newViewport !== this.viewport) {
            console.log('üìè Viewport changed:', this.viewport, '‚Üí', newViewport);
            this.viewport = newViewport;
            this.adjustPlayer();
        }
    }
    
    /**
     * –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–ª–µ–µ—Ä–∞ –≥–æ—Ç–æ–≤—ã
     */
    ensurePlayerReady() {
        const player = safeQuery('#epic-player');
        if (!player) {
            console.warn('‚ö†Ô∏è Epic player not found!');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        const elements = {
            display: safeQuery('.player-display', player),
            info: safeQuery('.player-info', player),
            progress: safeQuery('.progress-container', player),
            controls: safeQuery('.player-controls', player),
            modes: safeQuery('.player-modes', player),
            queue: safeQuery('.queue-container', player),
            lyrics: safeQuery('.lyrics-container', player)
        };
        
        // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        const missing = Object.entries(elements)
            .filter(([_, el]) => !el)
            .map(([key]) => key);
        
        if (missing.length > 0) {
            console.warn('‚ö†Ô∏è Missing elements:', missing);
        } else {
            console.log('‚úÖ All player elements found');
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–µ–µ—Ä
        if (player) {
            player.style.display = 'block';
        }
    }
    
    /**
     * –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª–µ–π
     */
    optimizeForMobile() {
        console.log('üîß Optimizing for mobile...');
        
        const player = safeQuery('#epic-player');
        if (!player) return;
        
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–æ–Ω—ã –∫–∞—Å–∞–Ω–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö
        const buttons = safeQueryAll('.control-btn, .mode-btn', player);
        buttons.forEach(btn => {
            btn.style.minWidth = '44px';
            btn.style.minHeight = '44px';
        });
        
        // –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª
        if ('scrollBehavior' in document.documentElement.style) {
            document.documentElement.style.scrollBehavior = 'smooth';
        }
        
        // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –±–∞—Ç–∞—Ä–µ–∏
        const animElements = safeQueryAll('[class*="animate"]', player);
        animElements.forEach(el => {
            el.style.animationPlayState = 'paused';
            setTimeout(() => {
                el.style.animationPlayState = 'running';
            }, 1000);
        });
    }
    
    /**
     * –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–ª–µ–µ—Ä –∫ —Ä–∞–∑–º–µ—Ä—É —ç–∫—Ä–∞–Ω–∞
     */
    adjustPlayer() {
        const player = safeQuery('#epic-player');
        if (!player) return;
        
        const display = safeQuery('.player-display', player);
        if (!display) return;
        
        // –ù–∞ xs —ç–∫—Ä–∞–Ω–∞—Ö - –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
        if (this.viewport === 'xs') {
            display.style.aspectRatio = '16 / 14';
            display.style.minHeight = '150px';
        }
        // –ù–∞ sm —ç–∫—Ä–∞–Ω–∞—Ö - –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
        else if (this.viewport === 'sm') {
            display.style.aspectRatio = '16 / 12';
            display.style.minHeight = '180px';
        }
        // –ù–∞ –±–æ–ª—å—à–∏—Ö - 16:9
        else {
            display.style.aspectRatio = '16 / 9';
            display.style.minHeight = '300px';
        }
    }
}

// ============================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// ============================================

let mobileHelper = null;

document.addEventListener('DOMContentLoaded', () => {
    if (isMobile) {
        console.log('üì± Initializing mobile player...');
        mobileHelper = new EpicPlayerMobileHelper();
    }
});

// ============================================
// –≠–ö–°–ü–û–†–¢ –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø
// ============================================

window.EpicPlayerMobile = {
    isMobile,
    isTablet: isTablet(),
    viewport: () => mobileHelper?.viewport || 'unknown',
    helper: () => mobileHelper
};

console.log('‚úÖ Epic Player Mobile Fix loaded');